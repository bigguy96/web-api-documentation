@using WebApiDocumentation.Extensions
@model BaseViewModel

@{
    ViewData["Title"] = "All APIs";
}

<div class="container">
    @{
        await Html.RenderPartialAsync("_WebApiTitle", Model);
    }

    @foreach (var paths in Model.Paths)
    {
        foreach (var operation in paths.Operations)
        {
            <h2>@operation.Name</h2>
            <h3><span class="badge @operation.GetBadge()">@operation.FullPath</span></h3>
            <h4>Description</h4>
            <p>@operation.Description</p>
            <h4>Summary</h4>
            <p>@operation.Summary</p>

            <h4>Response Content Type</h4>
            if (operation.RequestBodies.Any())
            {
                <table class="table table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Content Type</th>
                            <th scope="col">Id</th>
                            <th scope="col">Type</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var contentType = operation.RequestBodies?.SingleOrDefault(requestBody => requestBody.ContentType.Equals("application/json"));
                        }
                        <tr>
                            <td>@contentType?.ContentType</td>
                            <td><a href="Schemas/#@contentType?.Id" onclick="window.open('Schemas/#@contentType?.Id','popup','width=600,height=600,scrollbars=no,resizable=no'); return false;">@contentType?.Id</a></td>
                            <td>@contentType?.Type</td>
                        </tr>
                    </tbody>
                </table>

                if (contentType?.Id != null)
                {
                    <h4>Sample Request Body</h4>
                    <div class="docs-code-block">
<pre class="shadow-lg rounded">
<code class="json hljs">
 @contentType.Id.FormatJson(Model.Components)
</code>
</pre>
                    </div>
                }
            }
            else
            {
                <p>application/json</p>
            }

            <h4>Responses</h4>
            <table class="table table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var response in operation.Responses)
                    {
                        <tr>
                            <td>@response.Name</td>
                            <td>@response.Description</td>
                        </tr>
                    }
                </tbody>
            </table>

            <h4>Parameters</h4>
            <table class="table table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">In</th>
                        <th scope="col">Type</th>
                        <th scope="col">Description</th>
                        <th scope="col">Required</th>
                        <th scope="col">Enums</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var parameter in operation.Parameters)
                    {
                        <tr>
                            <td>@parameter.Name</td>
                            <td>@parameter.In</td>
                            <td>@parameter.Type</td>
                            <td>@parameter.Description</td>
                            <td>@parameter.IsRequired</td>
                            <td>@string.Join(", ", parameter.Enumerations.Select(e => e.Value))</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    }
</div>